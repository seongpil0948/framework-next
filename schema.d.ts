/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/users/{usrId}": {
    /**
     * 사용자 상세 조회
     * @description 사용자 상세 조회
     */
    get: operations["getUser"];
    /**
     * 사용자 수정
     * @description 사용자 수정(Schemas > UsrUpdateReqDto 참고)
     */
    put: operations["updateUsr"];
    /**
     * 사용자 삭제
     * @description 사용자 삭제
     */
    delete: operations["removeCd"];
  };
  "/roles/{roleId}": {
    /**
     * 역할 상세 조회
     * @description 역할 상세 조회
     */
    get: operations["getRole"];
    /**
     * 역할 수정
     * @description 역할 수정(Schemas > RoleUpdateReqDto 참고)
     */
    put: operations["updateRole"];
  };
  "/roles/role-user/{roleId}": {
    /**
     * 역할아이디 기준 역할-사용자 매핑 정보를 갱신한다.(전체 삭제 후 등록)
     * @description 역할아이디 기준 역할-사용자 매핑 정보를 갱신한다.(전체 삭제 후 등록)
     */
    put: operations["insertRoleUsrMapg"];
  };
  "/roles/role-menu-scrn/{roleId}": {
    /**
     * 역할아이디 기준 모든 역할-메뉴-화면 매핑 정보를 갱신한다.(전체 삭제 후 등록)
     * @description 역할아이디 기준 모든 역할-메뉴-화면 매핑 정보를 갱신한다.(전체 삭제 후 등록)<br/>(Schemas > RoleMenuScrnMapgCreateReqDto 참고)
     */
    put: operations["updateRoleMenuScrnMapg"];
  };
  "/roles/role-api-auth/{roleId}": {
    /**
     * 역할-API-권한 매핑 목록 조회
     * @description 역할-API-권한 매핑 목록 조회
     */
    get: operations["getRoleApiAuthList"];
    /**
     * 역할아이디 기준 모든 역할-api-권한 매핑 정보를 갱신한다.(전체 삭제 후 등록)
     * @description 역할아이디 기준 모든 역할-api-권한 매핑 정보를 갱신한다.(전체 삭제 후 등록)<br/>(Schemas > RoleApiAuthMapgCreateReqDto 참고)
     */
    put: operations["updateRoleApiAuthMapg"];
    /**
     * 역할-api-권한 매핑 삭제
     * @description 역할-api-권한 매핑 삭제
     */
    delete: operations["removeRoleApiAuth"];
  };
  "/roles/role-api-auth/{apiId}/{roleId}": {
    /**
     * API 기준 모든 역할-api-권한 매핑 정보를 갱신한다.(전체 삭제 후 등록)
     * @description API 기준 모든 역할-api-권한 매핑 정보를 갱신한다.(전체 삭제 후 등록)<br/>(Schemas > RoleApiAuthMapgCreateReqDto 참고)
     */
    put: operations["updateRoleApiAuthMapgByApi"];
  };
  "/noties/{notiId}": {
    /**
     * 알림 상세 조회
     * @description 알림 상세 조회
     */
    get: operations["getNotfDetail"];
    /**
     * 알림 수정
     * @description 알림 수정
     */
    put: operations["updateNotf"];
  };
  "/menus/{menuId}": {
    /**
     * 메뉴 상세 조회
     * @description 메뉴 상세 조회
     */
    get: operations["getMenu"];
    /**
     * 메뉴 수정
     * @description 메뉴 수정(Schemas > MenuUpdateReqDto 참고)
     */
    put: operations["updateMenu"];
  };
  "/customers/{cucoId}": {
    /**
     * 고객사 상세 조회
     * @description 고객사 상세 조회
     */
    get: operations["findCustomer"];
    /**
     * 고객사 수정
     * @description 고객사 수정
     */
    put: operations["modifyCustomer"];
  };
  "/cuco-dept/{cucoId}/{deptId}": {
    /**
     * 고객사 부서 상세 조회
     * @description 고객사 부서 상세 조회
     */
    get: operations["selectCucoDept"];
    /**
     * 고객사 부서 수정
     * @description 고객사 부서 수정
     */
    put: operations["modifyCucoDept"];
  };
  "/common/password-change": {
    /**
     * 비밀번호 변경
     * @description 비밀번호 변경
     */
    put: operations["passwordChange"];
  };
  "/codes/{codeGroup}/{code}": {
    /**
     * 코드 상세 조회
     * @description 코드 상세 조회
     */
    get: operations["getCd"];
    /**
     * 코드 수정
     * @description 코드 수정(Schemas > CdUpdateReqDto 참고)
     */
    put: operations["updateCd"];
  };
  "/code-groups/{codeGroup}": {
    /**
     * 코드그룹 상세 조회
     * @description 코드그룹 상세 조회
     */
    get: operations["getCdGrp"];
    /**
     * 코드그룹 수정
     * @description 코드그룹 수정(Schemas > CdGrpUpdateReqDto 참고)
     */
    put: operations["updateCdGrp"];
  };
  "/bbs/faq/{faqId}": {
    /**
     * FAQ 상세 조회
     * @description FAQ 상세 조회
     */
    get: operations["selecFaq"];
    /**
     * FAQ 수정
     * @description FAQ 수정
     */
    put: operations["updateFaq"];
  };
  "/bbs/annc/{anncId}": {
    /**
     * 공지사항 상세 조회
     * @description 공지사항 상세 조회
     */
    get: operations["selectAnnc"];
    /**
     * 공지사항 수정
     * @description 공지사항 수정
     */
    put: operations["updateAnnc"];
  };
  "/auths/{authId}": {
    /**
     * 권한 상세 조회
     * @description 권한 상세 조회
     */
    get: operations["getAuth"];
    /**
     * 권한 수정
     * @description 권한 수정(Schemas > AuthUpdateReqDto 참고)
     */
    put: operations["updateAuth"];
  };
  "/apnd-files/{apndFileId}": {
    /**
     * 파일 정보 수정
     * @description 파일 정보 수정
     */
    put: operations["updateApndFile"];
    /**
     * 파일 삭제
     * @description 파일 삭제
     */
    delete: operations["deleteApndFile"];
  };
  "/apis/{apiId}": {
    /**
     * API 상세 조회
     * @description API 상세 조회
     */
    get: operations["getApi"];
    /**
     * API 수정
     * @description API 수정(Schemas > ApiUpdateReqDto 참고)
     */
    put: operations["updateApi"];
  };
  "/apis/role-mapping/{apiId}": {
    /**
     * API 기준 역할리스트 갱신(전체 삭제 후 등록)
     * @description API 기준 역할리스트 갱신(전체 삭제 후 등록)
     */
    put: operations["updateRoleListByApiId"];
  };
  "/users": {
    /**
     * 사용자 조회
     * @description 사용자 조회
     */
    get: operations["getUserList"];
    /**
     * 사용자 등록
     * @description 사용자 등록(Schemas > UsrCreateReqDto 참고)
     */
    post: operations["regUsr"];
  };
  "/roles": {
    /**
     * 역할 목록 조회
     * @description 역할 목록 조회
     */
    get: operations["getRoleList"];
    /**
     * 역할 등록
     * @description 역할 등록(Schemas > RoleCreateReqDto 참고)
     */
    post: operations["regRole"];
    /**
     * 역할 삭제
     * @description 역할 삭제
     */
    delete: operations["removeRole"];
  };
  "/noties": {
    /**
     * 알림 조회
     * @description 알림 조회
     */
    get: operations["getNotf"];
    /**
     * 알림 등록
     * @description 알림 등록
     */
    post: operations["createNotf"];
    /**
     * 알림 삭제
     * @description 알림 삭제
     */
    delete: operations["deleteNotf"];
  };
  "/menus": {
    /**
     * 메뉴 목록(트리) 조회(역할 할당여부 표시, 할당된 화면만 리스트업)
     * @description 메뉴 목록(트리) 조회(역할 할당여부 표시, 할당된 화면만 리스트업)
     */
    get: operations["getMenuList"];
    /**
     * 메뉴 등록
     * @description 메뉴 등록
     */
    post: operations["regMenu"];
    /**
     * 메뉴 삭제
     * @description 메뉴 삭제
     */
    delete: operations["removeMenu"];
  };
  "/login": {
    /**
     * 로그인
     * @description 로그인</br></br> ** 테스트 계정 : admin / U2FsdGVkX1/W9xtgxK5iaWm6Wsbmi5y1PoUf2WP5SSk=
     */
    post: operations["login"];
  };
  "/login/send-sms-auth": {
    /**
     * SMS 인증번호 발송
     * @description SMS 인증번호 발송
     */
    post: operations["sendSmsAuth"];
  };
  "/login/remove-duplicate/{usrId}": {
    /**
     * 중복 로그인 제거
     * @description 중복 로그인 제거
     */
    post: operations["confirmLogin"];
  };
  "/login/check-sms-auth": {
    /**
     * SMS 인증번호 체크
     * @description SMS 인증번호 체크
     */
    post: operations["checkSmsAuth"];
  };
  "/login/check-duplicate/{usrId}": {
    /**
     * 중복 로그인 체크
     * @description 중복 로그인 체크
     */
    post: operations["checkDuplicateLogin"];
  };
  "/customers": {
    /**
     * 고객사 리스트 조회
     * @description 고객사 리스트 조회
     */
    get: operations["findCustomerList"];
    /**
     * 고객사 등록
     * @description 고객사 등록
     */
    post: operations["inputCustomer"];
    /**
     * 고객사 삭제
     * @description 고객사 삭제
     */
    delete: operations["removeCustomer"];
  };
  "/cuco-dept/{cucoId}": {
    /**
     * 고객사 부서 조회
     * @description 고객사 부서 조회
     */
    get: operations["selectCucoDeptList"];
    /**
     * 고객사 부서 등록
     * @description 고객사 부서 등록
     */
    post: operations["inputCucoDept"];
    /**
     * 고객사 부서 삭제
     * @description 고객사 부서 삭제
     */
    delete: operations["removeCucoDept"];
  };
  "/common/apnd-files": {
    post: operations["regImgs"];
  };
  "/codes": {
    /**
     * 코드 목록 조회
     * @description 코드 목록 조회
     */
    get: operations["getCdList_1"];
    /**
     * 코드 등록
     * @description 코드 등록(Schemas > ComResponseDto 참고)
     */
    post: operations["regCd"];
  };
  "/code-groups": {
    /**
     * 코드그룹 목록 조회
     * @description 코드그룹 목록 조회
     */
    get: operations["getCdGrpList"];
    /**
     * 코드그룹 등록
     * @description 코드그룹 등록(Schemas > CdGrpCreateReqDto 참고)
     */
    post: operations["regCdGrp"];
    /**
     * 코드그룹 삭제
     * @description 코드그룹 삭제
     */
    delete: operations["removeCdGrp"];
  };
  "/bbs/faq": {
    /**
     * FAQ 리스트 조회
     * @description FAQ 리스트 조회
     */
    get: operations["selectFaqList"];
    /**
     * FAQ 등록
     * @description FAQ 등록
     */
    post: operations["regFaq"];
    /**
     * FAQ 삭제
     * @description FAQ 삭제
     */
    delete: operations["removeFaq"];
  };
  "/bbs/annc": {
    /**
     * 공지사항 리스트 조회
     * @description 공지사항 조회
     */
    get: operations["selectAnncList"];
    /**
     * 공지사항 등록
     * @description 공지사항 등록
     */
    post: operations["regAnnc"];
    /**
     * 공지사항 삭제
     * @description 공지사항 삭제
     */
    delete: operations["removeAnnc"];
  };
  "/auths": {
    /**
     * 권한 목록 조회
     * @description 권한 목록 조회
     */
    get: operations["getAuthList"];
    /**
     * 권한 등록
     * @description 권한 등록(Schemas > AuthCreateReqDto 참고)
     */
    post: operations["regAuth"];
    /**
     * 권한 삭제
     * @description 권한 삭제
     */
    delete: operations["removeAuth"];
  };
  "/apis": {
    /**
     * API 목록 조회
     * @description API 목록 조회
     */
    get: operations["getApiList"];
    /**
     * API 등록
     * @description API 등록(Schemas > ApiCreateReqDto 참고)
     */
    post: operations["regApi"];
    /**
     * API 삭제
     * @description API 삭제
     */
    delete: operations["removeApi"];
  };
  "/welcome": {
    get: operations["welcome"];
  };
  "/roles/role-menu-scrn": {
    /**
     * 역할-메뉴-화면 매핑 목록 조회
     * @description 역할-메뉴-화면 매핑 목록 조회
     */
    get: operations["getRoleMenuScrnMapgList"];
  };
  "/roles/role-api-auth": {
    /**
     * 역할-API 매핑 목록 조회
     * @description 역할-API 매핑 목록 조회
     */
    get: operations["getRoleApiList"];
  };
  "/noties/excel": {
    /**
     * 알림 목록 엑셀 다운로드(jxls)
     * @description jxls Template을 이용한 Excel 다운로드
     */
    get: operations["downloadNotfListExcel"];
  };
  "/logout": {
    /**
     * 로그아웃
     * @description 로그아웃
     */
    get: operations["logout"];
  };
  "/customers/users/{cucoId}": {
    /**
     * 고객사 사용자 리스트 조회(고객사 사용자 등록팝업 겸용)
     * @description 고객사 사용자 리스트 조회(고객사 사용자 등록팝업 겸용)
     */
    get: operations["findCustomerUserList"];
  };
  "/customers/cuco-site/{cucoId}": {
    /**
     * 고객사 사이트 조회
     * @description 고객사 사이트 조회
     */
    get: operations["findCucoSite"];
  };
  "/cuco-dept/no-paging/{cucoId}": {
    /**
     * 고객사 부서 조회(페이징 없이)
     * @description 고객사 부서 조회(페이징 없이)
     */
    get: operations["selectNoPageCucoDeptList"];
  };
  "/cuco-dept/hpos-dept/{cucoId}": {
    /**
     * 고객사 상위 부서 조회
     * @description 고객사 상위 부서 조회
     */
    get: operations["selectCucoHposDeptList"];
  };
  "/cuco-dept/duplicate-check-deptNm/{cucoId}": {
    /**
     * 고객사 부서명 중복 체크
     * @description 고객사 부서명 중복 체크
     */
    get: operations["checkCucoDeptNm"];
  };
  "/common/session": {
    /**
     * 세션 정보 조회
     * @description 세션 정보 조회
     */
    get: operations["getSession"];
  };
  "/common/send-mail": {
    /**
     * 메일 발송
     * @description 메일 발송
     */
    get: operations["sendMail"];
  };
  "/common/profile": {
    /**
     * 서버 profie(로컬,개발,운영) 상태 조회
     * @description 서버 profie(로컬,개발,운영) 상태 조회
     */
    get: operations["getProfile"];
  };
  "/common/mqtt-connection-info": {
    /**
     * mqtt 접속 정보 조회
     * @description mqtt 접속 정보 조회
     */
    get: operations["getMqttConnectionInfo"];
  };
  "/common/encrypt-util-test": {
    /**
     * 암복호화 모듈 테스트(화면->서버구간)
     * @description 암복호화 모듈 테스트(화면->서버구간)
     */
    get: operations["encodePassword"];
  };
  "/common/encode-password": {
    /**
     * 사용자 비밀번호 DB 저장시 암호화 용도
     * @description 사용자 비밀번호 DB 저장시 암호화 용도
     */
    get: operations["encodePassword_1"];
  };
  "/common/down-files": {
    get: operations["downImgs"];
  };
  "/common/codes/{codeGroup}": {
    /**
     * 코드 조회
     * @description 코드 조회
     */
    get: operations["getCdList"];
  };
  "/roles/role-menu-scrn/{roleId}/{menuId}/{scrnId}": {
    /**
     * 역할-메뉴-화면 매핑 단건 삭제
     * @description 역할-메뉴-화면 매핑 단건 삭제
     */
    delete: operations["removeRoleMenuScrn"];
  };
  "/customers/cuco-site": {
    /**
     * 고객사 사이트 삭제
     * @description 고객사 사이트 삭제(cucoSiteId 존재시 단건 삭제/cucoSiteId 미존재시 전체삭제
     */
    delete: operations["removeCucoSite"];
  };
  "/codes/{codeGroup}": {
    /**
     * 코드 삭제
     * @description 코드 삭제
     */
    delete: operations["removeCd_1"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** @description 사용자 정보 수정 */
    UsrUpdateReqDto: {
      /**
       * @description 회사 아이디
       * @example abacus
       */
      cucoId: string;
      /**
       * @description 이메일
       * @example actorlee@iabacus.co.kr
       */
      email: string;
      /**
       * @description 비밀번호
       * @example 1q2w3e4er4r
       */
      password: string;
      /** @description 사용자에게 할당할 역할 아이디 목록 */
      roles?: string[];
      /**
       * Format: int32
       * @description 부서 아이디
       * @example 1
       */
      deptId: number;
      /**
       * @description 전화번호
       * @example 01012345678
       */
      tlno: string;
      /**
       * @description 유저 상태
       * @example ACTIVE
       */
      stateCd: string;
      /** @description 담당 로봇 목록 */
      robotList?: number[];
      /** @description 사용자 고객사 사이트 리스트(아이디) */
      cucoSites?: number[];
    };
    /** @description 메뉴-화면 매핑 정보 생성 */
    MenuScrnMapgUpdateReqDto: {
      /**
       * @description 메뉴 아이디
       * @example ROLE_ADMIN
       */
      menuId: string;
      /**
       * @description 화면 아이디
       * @example Y
       */
      mainScreenYn: string;
    };
    /** @description 역할 수정 요청 */
    RoleUpdateReqDto: {
      /**
       * @description 역할 명
       * @example 시스템관리자
       */
      roleName: string;
      /**
       * @description 역할 설명
       * @example 시스템관리자
       */
      roleDescription: string;
      /**
       * @description 사용 여부
       * @example Y
       */
      useYn: string;
      /** @description 역할-메뉴-화면 매핑 정보 생성 */
      menuScrnMapg?: components["schemas"]["MenuScrnMapgUpdateReqDto"][];
    };
    /** @description 역할-사용자 매핑 정보 생성 */
    RoleUsrMapgUpdateReqDto: {
      /** @description 사용자 아이디 */
      userIdList?: string[];
    };
    /** @description 역할-메뉴-화면 매핑 정보 생성 */
    RoleMenuScrnMapgUpdateReqDto: {
      /** @description 역할-메뉴-화면 매핑 정보 생성 */
      menuScrnMapg?: components["schemas"]["MenuScrnMapgUpdateReqDto"][];
    };
    /** @description api-권한 매핑 정보 생성 */
    ApiAuthMapgUpdateReqDto: {
      /**
       * @description api 아이디
       * @example ROLE_ADMIN
       */
      apiId: string;
      /**
       * @description 권한 아이디
       * @example ALL_D
       */
      authId: string;
    };
    /** @description 역할-api-권한 매핑 정보 생성 */
    RoleApiAuthMapgUpdateReqDto: {
      /** @description 역할-api-권한 매핑 정보 생성 */
      apiAuthMapg?: components["schemas"]["ApiAuthMapgUpdateReqDto"][];
    };
    /** @description 알림 수정 */
    NotfUpdateReqDto: {
      /**
       * @description 로봇 타입
       * @example CRITICAL
       */
      alarmType: string;
      /**
       * @description 알림 내용
       * @example 로봇 자동 제어 요청에 실패 하였습니다.
       */
      notiDescription: string;
      /**
       * @description 사용 여부
       * @example N
       */
      useYn: string;
      /**
       * @description 변경 가능 여부
       * @example Y
       */
      chgPsblYn: string;
      /**
       * @description SMS 발송 여부
       * @example Y
       */
      smsSendYn: string;
      /**
       * @description 알림 발송 여부
       * @example Y
       */
      notfSendYn: string;
    };
    /** @description 메뉴 순서 변경용 DTO */
    MenuIndexReqDto: {
      /**
       * @description 메뉴 아이디
       * @example MGMT_CDDE_TEST
       */
      menuId: string;
      /**
       * Format: int32
       * @description 메뉴 순서
       * @example 1
       */
      menuIdx: number;
    };
    /** @description 메뉴 수정 */
    MenuUpdateReqDto: {
      /**
       * @description 메뉴 명
       * @example 공통코드 관리 Child
       */
      menuName: string;
      /**
       * @description 메뉴 설명
       * @example 공통코드 관리 Child
       */
      menuDescription: string;
      /**
       * @description 메뉴 유형 코드
       * @example MGMT
       */
      menuKindCode: string;
      /**
       * Format: int32
       * @description 메뉴 순서
       * @example 0
       */
      menuIndex: number;
      /**
       * @description 상위 메뉴 아이디
       * @example MGMT_CODE
       */
      parentMenuId: string;
      /**
       * @description 사용 여부
       * @example Y
       */
      useYn: string;
      /**
       * @description 메뉴 URL
       * @example /test
       */
      menuUrl: string;
      menuIndexList?: components["schemas"]["MenuIndexReqDto"][];
    };
    CucoSiteReadResDto: {
      cucoId?: string;
      /** Format: int32 */
      cucoSiteId?: number;
      cucoSiteNm?: string;
    };
    /** @description 고객사 정보 수정 */
    CucoUpdateReqDto: {
      /**
       * @description 고객사 명
       * @example 애버커스
       */
      customerName: string;
      /**
       * @description 고객사 설명
       * @example 애버커스
       */
      customerDescription: string;
      /**
       * @description 로봇 인증 비밀번호
       * @example U2FsdGVkX1/K1V1oHN116j6yT/TYPP/Epza0AvF9SZg=
       */
      robotAuthPassword: string;
      /**
       * @description 마스터 아이디
       * @example admin
       */
      masterId: string;
      /**
       * @description 마스터 이메일
       * @example admin@iabacus.co.kr
       */
      masterEmail: string;
      /**
       * @description 마스터 아이디 비밀번호
       * @example U2FsdGVkX1/K1V1oHN116j6yT/TYPP/Epza0AvF9SZg=
       */
      masterPassword: string;
      /**
       * @description 상태 코드
       * @example ACTIVE/LOCK/CANCEL
       */
      stateCd: string;
      cucoSite?: components["schemas"]["CucoSiteReadResDto"][];
    };
    /** @description 고객사 부서 정보 수정 */
    CucoDeptUpdateReqDto: {
      /**
       * Format: int32
       * @description 고객사 아이디
       */
      hposDeptId?: number;
      /**
       * @description 고객사 부서 명
       * @example 애버커스 사업부
       */
      deptNm: string;
      /**
       * @description 사용 여부
       * @example Y
       */
      useYn: string;
    };
    PasswordChngUsrInfoReqDto: {
      token?: string;
      password?: string;
    };
    /** @description 코드 수정 */
    CdUpdateReqDto: {
      /**
       * @description 코드 명
       * @example 게시판
       */
      codeName: string;
      /**
       * @description 코드 값
       * @example BBS
       */
      codeValue: string;
      /**
       * @description 코드 설명
       * @example 게시판
       */
      codeDescription: string;
      /**
       * Format: int32
       * @description 코드 순서
       * @example 1
       */
      codeIndex: number;
      /**
       * @description 사용 여부
       * @example Y
       */
      useYn: string;
      /**
       * @description 변경 가능 여부
       * @example Y
       */
      chgPsblYn: string;
    };
    /** @description 그룹 코드 수정 */
    CdGrpUpdateReqDto: {
      /**
       * @description 코드 그룹 명
       * @example 첨부 파일 유형
       */
      codeGroupName: string;
      /**
       * @description 코드 그룹 설명
       * @example 첨부 파일 유형
       */
      codeGroupDescription: string;
      /**
       * @description 사용 여부
       * @example Y
       */
      useYn: string;
      /** @description 상위 그룹 코드 */
      parentCodeGroup: string;
    };
    ApndFiles: {
      /** Format: int32 */
      apndFileId?: number;
      apndFilePath?: string;
      apndFileNm?: string;
      orgFileNm?: string;
      /** Format: int32 */
      fileSiz?: number;
      /** Format: int32 */
      fileIdx?: number;
    };
    /** @description FAQ 수정 */
    FaqUpdateReqDto: {
      /**
       * @description FAQ 제목
       * @example testFaq
       */
      faqTit: string;
      /**
       * @description FAQ 내용
       * @example testFaqCont
       */
      faqCont: string;
      /**
       * @description 카테고리 코드
       * @example QUESTION
       */
      catgCd: string;
      file?: components["schemas"]["ApndFiles"][];
      imageFile?: components["schemas"]["ApndFiles"][];
    };
    AnncUpdateReqDto: {
      /**
       * @description 공지사항 제목
       * @example 공지제목
       */
      anncTit: string;
      /**
       * @description 공지사항 내용
       * @example 공지 내용
       */
      anncCont: string;
      /**
       * @description 공지사항 시작일시
       * @example 2022-01-11
       */
      anncStrtdt: string;
      /**
       * @description 공지사항 종료일시
       * @example 2022-01-13
       */
      anncEnddt: string;
      file?: components["schemas"]["ApndFiles"][];
      imageFile?: components["schemas"]["ApndFiles"][];
    };
    /** @description 권한 수정 요청 */
    AuthUpdateReqDto: {
      /**
       * @description 권한 명
       * @example 모두 삭제(삭제불가)
       */
      authName: string;
      /**
       * @description 권한 설명
       * @example 모두 삭제(삭제불가)
       */
      authDescription: string;
      /**
       * @description 사용 여부
       * @example Y
       */
      useYn: string;
    };
    /** @description API 정보 */
    ApiUpdateReqDto: {
      /**
       * @description API 명
       * @example API 등록 요청
       */
      apiName: string;
      /**
       * @description API 설명
       * @example API 등록 요청
       */
      apiDescription: string;
      /**
       * @description API 유형코드
       * @example MGMT
       */
      apiKindCode: string;
      /**
       * @description API Http 메소드
       * @example POST
       */
      apiActDivsCd: string;
      /**
       * @description API 경로 패턴
       * @example /apis
       */
      apiPathPattern: string;
      /**
       * @description API 사용 여부
       * @example Y
       */
      useYn: string;
    };
    /** @description API-역할 매핑 정보 */
    ApiRoleUpdateReqDto: {
      /** @description 역할 리스트 */
      roleIds: string[];
    };
    /** @description 사용자 정보 */
    UsrCreateReqDto: {
      /**
       * @description 사용자 아이디
       * @example actorlee
       */
      userId: string;
      /**
       * @description 사용자 명
       * @example 홍길동
       */
      userName: string;
      /**
       * @description 이메일
       * @example actorlee@iabacus.co.kr
       */
      email: string;
      /**
       * @description 비밀번호
       * @example 1q2w3e4er4r
       */
      password: string;
      /**
       * @description 회사 아이디
       * @example abacus
       */
      cucoId: string;
      /**
       * Format: int32
       * @description 부서 아이디
       * @example 1
       */
      deptId: number;
      /**
       * @description 유저 상태
       * @example ACTIVE
       */
      stateCd: string;
      /**
       * @description 전화번호
       * @example 01012345678
       */
      tlno: string;
      /** @description 담당 로봇 목록 */
      robotList?: number[];
      /** @description 사용자에게 할당할 역할 아이디 목록 */
      roles?: string[];
      /** @description 사용자 고객사 사이트 리스트(아이디) */
      cucoSites?: number[];
    };
    MenuApiMapgResDto: {
      menuId?: string;
      menuNm?: string;
      apiId?: string;
      assignYn?: string;
    };
    /** @description 역할 생성 */
    RoleCreateReqDto: {
      /**
       * @description 역할 아이디
       * @example ROLE_ADMIN
       */
      roleId: string;
      /**
       * @description 역할 명
       * @example 시스템관리자
       */
      roleName: string;
      /**
       * @description 역할 설명
       * @example 시스템관리자
       */
      roleDescription: string;
      /**
       * @description 사용 여부
       * @example Y
       */
      useYn: string;
      menuRoleList?: components["schemas"]["MenuApiMapgResDto"][];
    };
    /** @description 알림 생성 */
    NotfCreateReqDto: {
      /**
       * @description 알림 아이디
       * @example MANUAL_CTRL_FAIL
       */
      notiId: string;
      /**
       * @description 알림 타입
       * @example CRITICAL
       */
      alarmType: string;
      /**
       * @description 알림 내용
       * @example ${ESTB_PLC_NM}의 ${ROBOT_NM}에서 음성 통화 요청이 왔습니다.
       */
      notiDescription: string;
      /**
       * @description 사용 여부
       * @example N
       */
      useYn: string;
      /**
       * @description 변경 가능 여부
       * @example Y
       */
      chgPsblYn: string;
      /**
       * @description SMS 발송 여부
       * @example Y
       */
      smsSendYn: string;
      /**
       * @description 알림 발송 여부
       * @example Y
       */
      notfSendYn: string;
    };
    /** @description 메뉴 정보 */
    MenuCreateReqDto: {
      /**
       * @description 메뉴 아이디
       * @example MGMT_CDDE_TEST
       */
      menuId: string;
      /**
       * @description 메뉴 명
       * @example 공통코드 관리 Child
       */
      menuName: string;
      /**
       * @description 메뉴 설명
       * @example 공통코드 관리 Child
       */
      menuDescription: string;
      /**
       * @description 메뉴 링크
       * @example /test
       */
      menuUrl: string;
      /**
       * @description 메뉴 유형 코드
       * @example MGMT
       */
      menuKindCode: string;
      /**
       * Format: int32
       * @description 메뉴 순서
       * @example 0
       */
      menuIndex: number;
      /**
       * @description 상위 메뉴 아이디
       * @example MGMT_CODE
       */
      parentMenuId: string;
      /**
       * @description 사용 여부
       * @example Y
       */
      useYn: string;
      menuIndexList?: components["schemas"]["MenuIndexReqDto"][];
    };
    /** @description 고객사 정보 생성 */
    CucoCreateReqDto: {
      /**
       * @description 고객사 아이디
       * @example ABACUS
       */
      customerId: string;
      /**
       * @description 고객사 명
       * @example 애버커스
       */
      customerName: string;
      /**
       * @description 고객사 설명
       * @example 애버커스
       */
      customerDescription: string;
      /**
       * @description 로봇 인증 비밀번호
       * @example U2FsdGVkX19ynUoXMRNnU/BnPkkjZ8HziJJ+ToE0g9w=
       */
      robotAuthPassword: string;
      /**
       * @description 마스터 아이디
       * @example admin
       */
      masterId: string;
      /**
       * @description 마스터 이메일
       * @example admin@iabacus.co.kr
       */
      masterEmail: string;
      /**
       * @description 마스터 비밀번호
       * @example U2FsdGVkX19ynUoXMRNnU/BnPkkjZ8HziJJ+ToE0g9w=
       */
      masterPassword: string;
      /**
       * @description 상태 코드
       * @example ACTIVE/LOCK/CANCEL
       */
      stateCd: string;
      cucoSite?: components["schemas"]["CucoSiteReqDto"][];
    };
    CucoSiteReqDto: {
      cucoId?: string;
      /** Format: int32 */
      cucoSiteId?: number;
      cucoSiteNm?: string;
    };
    CucoDeptCreateReqDto: {
      /**
       * @description 고객사 아이디
       * @example ABACUS
       */
      cucoId: string;
      /**
       * Format: int32
       * @description 상위 부서 아이디
       */
      hposDeptId?: number;
      /**
       * @description 고객사 부서 명
       * @example 애버커스 사업부
       */
      deptNm: string;
      /**
       * @description 사용 여부
       * @example Y
       */
      useYn: string;
    };
    /** @description 파일 목록 */
    FileReadListResDto: {
      /** @description 파일 목록 */
      data: components["schemas"]["FileReadResDto"][];
    };
    /** @description 파일 등록 */
    FileReadResDto: {
      /**
       * Format: int32
       * @description 첨부 파일 아이디
       * @example 1
       */
      apndFileId: number;
      /**
       * @description 첨부 파일 경로
       * @example /upload
       */
      apndFilePath: string;
      /**
       * @description 첨부 파일 명
       * @example ejqkanld10dj2
       */
      apndFileNm: string;
      /**
       * @description 원본 파일 명
       * @example 사진.png
       */
      orgFileNm: string;
      /**
       * Format: int32
       * @description 파일 사이즈
       * @example 1239420
       */
      fileSiz: number;
      /**
       * Format: int32
       * @description 파일 순서
       * @example 1
       */
      fileIdx: number;
    };
    /** @description 코드 생성 */
    CdCreateReqDto: {
      /**
       * @description API 아이디
       * @example BBS
       */
      code: string;
      /**
       * @description 그룹 코드
       * @example APNDFILE_KD
       */
      codeGroup: string;
      /**
       * @description 코드 명
       * @example 게시판
       */
      codeName: string;
      /**
       * @description 코드 값
       * @example BBS
       */
      codeValue: string;
      /**
       * @description 코드 설명
       * @example 게시판
       */
      codeDescription: string;
      /**
       * Format: int32
       * @description 코드 순서
       * @example 1
       */
      codeIndex: number;
      /**
       * @description 사용 여부
       * @example Y
       */
      useYn: string;
      /**
       * @description 변경 가능 여부
       * @example Y
       */
      chgPsblYn: string;
    };
    /** @description 그룹 코드 생성 */
    CdGrpCreateReqDto: {
      /**
       * @description 그룹 코드
       * @example APNDFILE_KD
       */
      codeGroup: string;
      /**
       * @description 코드 그룹 명
       * @example 첨부 파일 유형
       */
      codeGroupName: string;
      /**
       * @description 코드 그룹 설명
       * @example 첨부 파일 유형
       */
      codeGroupDescription: string;
      /** @description 상위 그룹 코드 */
      parentCodeGroup: string;
      /**
       * @description 사용 여부
       * @example Y
       */
      useYn: string;
    };
    /** @description FAQ 등록 DTO */
    FaqCreateReqDto: {
      /**
       * @description FAQ 제목
       * @example testFaq
       */
      faqTit: string;
      /**
       * @description FAQ 내용
       * @example testFaqCont
       */
      faqCont: string;
      /**
       * @description 카테고리 코드
       * @example QUESTION
       */
      catgCd: string;
      file?: components["schemas"]["ApndFiles"][];
      imageFile?: components["schemas"]["ApndFiles"][];
    };
    AnncCreateReqDto: {
      /**
       * @description 공지사항 제목
       * @example 제목입니다
       */
      anncTit: string;
      /**
       * @description 공지사항 내용
       * @example 내용입니다
       */
      anncCont: string;
      /**
       * @description 공지사항 시작일시
       * @example 2022-01-11
       */
      anncStrtdt: string;
      /**
       * @description 공지사항 종료일시
       * @example 2022-01-13
       */
      anncEnddt: string;
      file?: components["schemas"]["ApndFiles"][];
      imageFile?: components["schemas"]["ApndFiles"][];
    };
    /** @description 권한 생성 요청 */
    AuthCreateReqDto: {
      /**
       * @description 권한 아이디
       * @example ALL_D
       */
      authId: string;
      /**
       * @description 권한 명
       * @example 모두 삭제(삭제불가)
       */
      authName: string;
      /**
       * @description 권한 설명
       * @example 모두 삭제(삭제불가)
       */
      authDescription: string;
      /**
       * @description 사용 여부
       * @example Y
       */
      useYn: string;
    };
    /** @description API 정보 */
    ApiCreateReqDto: {
      /**
       * @description API 아이디
       * @example MGMT_API_CREATE
       */
      apiId: string;
      /**
       * @description API 명
       * @example API 등록 요청
       */
      apiName: string;
      /**
       * @description API 설명
       * @example API 등록 요청
       */
      apiDescription: string;
      /**
       * @description API 유형코드
       * @example MGMT
       */
      apiKindCode: string;
      /**
       * @description API Http 메소드
       * @example POST
       */
      apiActDivsCd: string;
      /**
       * @description API 경로 패턴
       * @example /apis
       */
      apiPathPattern: string;
      /**
       * @description API 사용 여부
       * @example Y
       */
      useYn: string;
      /** @description 역할 리스트 */
      roleIds: string[];
    };
    ComResponseDto: {
      /**
       * Format: int32
       * @description httpStatusCode
       */
      httpStatusCode?: number;
      /** @description code */
      code?: string;
      /** @description 응답 전문 메시지 */
      message?: string;
      detailMessage?: string;
      status?: string;
      /** @description 공통 응답 전문 body */
      body?: Record<string, never>;
    };
    /** @description 사용자에게 할당할 역할 아이디 목록 */
    UsrReadListResDto: {
      /** Format: int32 */
      totalPage?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      currentPage?: number;
      /** Format: int32 */
      limit?: number;
      /** @description 사용자에게 할당할 역할 아이디 목록 */
      data?: components["schemas"]["UsrReadResDto"][];
    };
    /** @description 사용자 정보 */
    UsrReadResDto: {
      /** Format: int32 */
      num?: number;
      /**
       * @description 사용자 아이디
       * @example actorlee
       */
      userId: string;
      /**
       * @description 사용자 명
       * @example 홍길동
       */
      userName: string;
      /**
       * @description 사용자 그룹 아이디
       * @example DEFAULT
       */
      userGroupId: string;
      /**
       * @description 그룹 명
       * @example 기본 그룹
       */
      userGroupName: string;
      /**
       * @description 이메일
       * @example actorlee@iabacus.co.kr
       */
      email: string;
      /**
       * Format: int32
       * @description 비밀번호 오류 횟수
       * @example 0
       */
      passwordErrorCount: number;
      /**
       * @description 생성 일시
       * @example 2020-12-14 03:51:30
       */
      createDate: string;
      /**
       * @description 생성자 아이디
       * @example admin
       */
      createUserId: string;
      /**
       * @description 생성자 명
       * @example admin
       */
      createUserNm: string;
      /**
       * @description 비밀번호 변경 일시
       * @example 2020-12-14 03:51:30
       */
      passwordChangedDate: string;
      /**
       * @description 수정 일시
       * @example 2020-12-14 03:51:30
       */
      updateDate: string;
      /**
       * @description 수정자 아이디
       * @example admin
       */
      updateUserId: string;
      /**
       * @description 수정자 명
       * @example admin
       */
      updateUserName: string;
      /**
       * @description 회사 명
       * @example abacus
       */
      cucoNm: string;
      /**
       * @description 회사 아이디
       * @example abacus
       */
      cucoId: string;
      /**
       * Format: int32
       * @description 부서 아이디
       * @example 1
       */
      deptId: number;
      /**
       * @description 부서 명
       * @example abacus
       */
      deptNm: string;
      /**
       * @description 역할 아이디
       * @example ROLE_ADMIN
       */
      roleId: string;
      /**
       * @description 역할
       * @example 관리자
       */
      roleNm: string;
      /**
       * @description 유저 상태
       * @example ACTIVE
       */
      stateCd: string;
      /**
       * @description 유저 상태 코드 명
       * @example 가입
       */
      stateCdNm: string;
      /**
       * @description 전화번호
       * @example ACTIVE
       */
      tlno: string;
      /**
       * @description 로봇 아이디
       * @example ACTIVE
       */
      svcRobotId: string;
      /**
       * @description 로봇 명
       * @example ACTIVE
       */
      robotNm: string;
      /**
       * @description 고객사 사이트 아이디
       * @example 1
       */
      cucoSiteId: string;
      /**
       * @description 고객사 사이트 명
       * @example LG CNS>서울>3공장
       */
      cucoSiteNm: string;
    };
    /** @description 역할 정보 */
    RoleReadListResDto: {
      /** Format: int32 */
      totalPage?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      currentPage?: number;
      /** Format: int32 */
      limit?: number;
      /** @description 역할 정보 */
      data?: components["schemas"]["RoleReadResDto"][];
    };
    /** @description 역할 정보 */
    RoleReadResDto: {
      /** Format: int32 */
      no?: number;
      /**
       * @description 역할 아이디
       * @example ROLE_ADMIN
       */
      roleId: string;
      /**
       * @description 역할 명
       * @example 시스템관리자
       */
      roleName: string;
      /**
       * @description 역할 명
       * @example 시스템관리자
       */
      roleDescription: string;
      /**
       * @description 역할 타입
       * @example MGMT
       */
      roleType: string;
      /**
       * @description 사용 여부
       * @example Y
       */
      useYn: string;
      /**
       * @description 생성 일시
       * @example 2020-11-24 11:33:15
       */
      createDate: string;
      /**
       * @description 생성자 아이디
       * @example admin
       */
      createUserId: string;
      /**
       * @description 수정 일시
       * @example 2020-11-24 11:33:15
       */
      updateDate: string;
      /**
       * @description 수정자 아이디
       * @example admin
       */
      updateUserId: string;
      /** @description 역할 할당 여부 */
      assigned: boolean;
      menuRoleList?: components["schemas"]["MenuApiMapgResDto"][];
    };
    /** @description 역할-메뉴-화면 매핑 정보 조회 */
    RoleMenuScrnMapgReadListResDto: {
      /** Format: int32 */
      totalPage?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      currentPage?: number;
      /** Format: int32 */
      limit?: number;
      /** @description 역할-메뉴-화면 매핑 정보 조회 */
      data?: components["schemas"]["RoleMenuScrnMapgReadResDto"][];
    };
    /** @description 역할-메뉴-화면 매핑 정보 조회 */
    RoleMenuScrnMapgReadResDto: {
      /**
       * @description 역할 아이디
       * @example ROLE_ADMIN
       */
      roleId: string;
      /**
       * @description 메뉴 아이디
       * @example MGMT_CODE
       */
      menuId: string;
      /**
       * @description 화면 아이디
       * @example MGMT_CODE_GROUPUP_REG
       */
      screenId: string;
      /**
       * @description 메인 화면 여부
       * @example Y
       */
      mainScreenYn: string;
    };
    /** @description 역할-api 매핑 정보 조회 */
    RoleApiMapgReadResDto: {
      /**
       * @description 역할 아이디
       * @example ROLE_ADMIN
       */
      roleId: string;
      /**
       * @description api 아이디
       * @example MGMT_AUTH_DELETE
       */
      apiId: string;
    };
    /** @description 역할-api 매핑 정보 조회 */
    RoleApiReadListResDto: {
      /** Format: int32 */
      totalPage?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      currentPage?: number;
      /** Format: int32 */
      limit?: number;
      /** @description 역할-api 매핑 정보 조회 */
      data?: components["schemas"]["RoleApiMapgReadResDto"][];
    };
    /** @description 역할-api-권한 매핑 정보 조회 */
    RoleApiAuthMapgReadResDto: {
      /**
       * @description 역할 아이디
       * @example ROLE_ADMIN
       */
      roleId: string;
      /**
       * @description api 아이디
       * @example MGMT_AUTH_DELETE
       */
      apiId: string;
      /**
       * @description api 명
       * @example 권한 삭제 요청
       */
      apiNm: string;
      /**
       * @description 권한 명
       * @example 모두 삭제
       */
      authNm: string;
      /**
       * @description 권한 아이디
       * @example ALL_D
       */
      authId: string;
    };
    /** @description 역할-api-권한 매핑 정보 조회 */
    RoleApiAuthReadListResDto: {
      /** Format: int32 */
      totalPage?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      currentPage?: number;
      /** Format: int32 */
      limit?: number;
      /** @description 역할-api-권한 매핑 정보 조회 */
      data?: components["schemas"]["RoleApiAuthMapgReadResDto"][];
    };
    /** @description 알림 목록 조회 */
    NotfReadListResDto: {
      /** Format: int32 */
      totalPage?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      currentPage?: number;
      /** Format: int32 */
      limit?: number;
      /**
       * @description 알림 목록 조회
       * @example 알림 목록 조회
       */
      data: components["schemas"]["NotfReadResDto"][];
    };
    /** @description 알림 조회 */
    NotfReadResDto: {
      /** Format: int32 */
      no?: number;
      /**
       * @description 알림 코드
       * @example CONNECTION_CLOSE
       */
      notiId: string;
      /**
       * @description 알림 타입
       * @example WARING
       */
      alarmType: string;
      alarmTypeName?: string;
      /**
       * @description 알림 내용
       * @example ${ROBOT_NM}의 커넥션이 끊겼습니다.
       */
      notiDescription: string;
      /**
       * @description 사용 여부
       * @example N
       */
      useYn: string;
      /**
       * @description 변경 가능 여부
       * @example Y
       */
      chgPsblYn: string;
      /**
       * @description 생성자 아이디
       * @example admin
       */
      createUserId: string;
      /**
       * @description 생성 일시
       * @example 2020-12-10 06:51:50
       */
      createDate: string;
      /**
       * @description 수정자 아이디
       * @example admin
       */
      updateUserId: string;
      /**
       * @description 수정 일시
       * @example 2020-12-21 06:37:56
       */
      updateDate: string;
      /**
       * @description SMS 발송 여부
       * @example Y
       */
      smsSendYn: string;
      /**
       * @description 알림 발송 여부
       * @example Y
       */
      notfSendYn: string;
      notfType?: string;
    };
    /** @description 메뉴 목록 */
    MenuReadListResDto: {
      /** Format: int32 */
      totalPage?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      currentPage?: number;
      /** Format: int32 */
      limit?: number;
      /** @description 메뉴 목록 */
      data: components["schemas"]["MenuReadResDto"][];
    };
    /** @description 메뉴 정보 */
    MenuReadResDto: {
      /**
       * @description 메뉴 아이디
       * @example MGMT_CDDE_TEST
       */
      menuId: string;
      /**
       * @description 메뉴 유형 코드
       * @example MGMT
       */
      menuKindCode: string;
      /**
       * @description 메뉴 명
       * @example 공통코드 관리 Child
       */
      menuName: string;
      /**
       * @description 메뉴 설명
       * @example 공통코드 관리 Child
       */
      menuDescription: string;
      /**
       * @description 메뉴 링크
       * @example /robot
       */
      menuUrl: string;
      /**
       * Format: int32
       * @description 메뉴 순서
       * @example 0
       */
      menuIndex: number;
      /**
       * @description 사용 여부
       * @example Y
       */
      useYn: string;
      /**
       * @description 생성 일시
       * @example 2020-12-10 00:50:50
       */
      createDate: string;
      /**
       * @description 생성자 아이디
       * @example admin
       */
      createUserId: string;
      /**
       * @description 생성자 명
       * @example admin
       */
      createUserName: string;
      /**
       * @description 상위 메뉴 아이디
       * @example MGMT_CODE
       */
      parentMenuId: string;
      /**
       * @description 수정 일시
       * @example 2020-12-10 00:50:50
       */
      updateDate: string;
      /** @description 수정자 아이디 */
      updateUserId: string;
      /** @description 수정자 명 */
      updateUserNm: string;
      /** @description 특정 역할에 본 메뉴가 포함되어 있는지 여부 */
      assigned: boolean;
      /**
       * @description 매핑된 역할정보
       * @example ROLE_TEST
       */
      roleMappingInfo?: string;
    };
    CucoReadListResDto: {
      /** Format: int32 */
      totalPage?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      currentPage?: number;
      /** Format: int32 */
      limit?: number;
      data?: components["schemas"]["CucoReadResDto"][];
    };
    /** @description 고객사 정보 응답 객체 */
    CucoReadResDto: {
      /** Format: int32 */
      getrNum?: number;
      customerId?: string;
      customerName?: string;
      customerDescription?: string;
      robotAuthId?: string;
      robotAuthPassword?: string;
      masterId?: string;
      masterPassword?: string;
      masterEmail?: string;
      useYn?: string;
      createDate?: string;
      createUserId?: string;
      updateDate?: string;
      updateUserId?: string;
      stateCd?: string;
      cucoSite?: components["schemas"]["CucoSiteReadResDto"][];
    };
    CucoUserReadListResDto: {
      /** Format: int32 */
      totalPage?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      currentPage?: number;
      /** Format: int32 */
      limit?: number;
      data?: components["schemas"]["CucoUserReadResDto"][];
    };
    CucoUserReadResDto: {
      /** Format: int32 */
      num?: number;
      userId?: string;
      userName?: string;
      roles?: string;
      searchText?: string;
      masterYn?: string;
      crteUsrId?: string;
      crteDt?: string;
    };
    CucoSiteReadListResDto: {
      /** Format: int32 */
      totalPage?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      currentPage?: number;
      /** Format: int32 */
      limit?: number;
      data?: components["schemas"]["CucoSiteReadResDto"][];
    };
    CucoDeptReadListResDto: {
      /** Format: int32 */
      totalPage?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      currentPage?: number;
      /** Format: int32 */
      limit?: number;
      data?: components["schemas"]["CucoDeptReadResDto"][];
    };
    /** @description 고객사 부서 응답 객체 */
    CucoDeptReadResDto: {
      /** Format: int32 */
      num?: number;
      /** Format: int32 */
      deptId?: number;
      /** Format: int32 */
      hposDeptId?: number;
      hposDeptNm?: string;
      cucoId?: string;
      cucoNm?: string;
      useYn?: string;
      delYn?: string;
      deptNm?: string;
      cucoDeptIdx?: string;
      crteUsrId?: string;
      crteDt?: string;
      updUsrId?: string;
      updDt?: string;
      /** Format: int32 */
      lvl?: number;
      depthPath?: string;
      depthLvl1?: string;
      depthLvl2?: string;
      depthLvl3?: string;
    };
    LginUsrMenuDto: {
      menuId?: string;
      parentMenuId?: string;
      menuName?: string;
      /** Format: int32 */
      menuIndex?: number;
      menuUrl?: string;
    };
    LginUsrSimpleInfoDto: {
      userName?: string;
      userGroupName?: string;
      menuScreenInfo?: components["schemas"]["LginUsrMenuDto"][];
    };
    ComResponseDtoVoid: {
      /**
       * Format: int32
       * @description httpStatusCode
       */
      httpStatusCode?: number;
      /** @description code */
      code?: string;
      /** @description 응답 전문 메시지 */
      message?: string;
      detailMessage?: string;
      status?: string;
      /** @description 공통 응답 전문 body */
      body?: Record<string, never>;
    };
    ComResponseDtoString: {
      /**
       * Format: int32
       * @description httpStatusCode
       */
      httpStatusCode?: number;
      /** @description code */
      code?: string;
      /** @description 응답 전문 메시지 */
      message?: string;
      detailMessage?: string;
      status?: string;
      /** @description 공통 응답 전문 body */
      body?: string;
    };
    MqttConnectionInfoDto: {
      mqttPassword?: string;
      mqttDeviceId?: string;
    };
    FileDownResDto: {
      extension?: string;
      binary?: string;
    };
    /** @description 코드 목록 */
    CdCmmnReadListResDto: {
      /** Format: int32 */
      totalPage?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      currentPage?: number;
      /** Format: int32 */
      limit?: number;
      /** @description 코드 목록 */
      data: components["schemas"]["CdCmmnReadResDto"][];
    };
    /** @description 코드 정보 */
    CdCmmnReadResDto: {
      /**
       * @description API 아이디
       * @example BBS
       */
      code: string;
      /**
       * @description 코드 명
       * @example 게시판
       */
      codeName: string;
      /**
       * @description 코드 값
       * @example BBS
       */
      codeValue: string;
      /**
       * @description 그룹 코드
       * @example APNDFILE_KD
       */
      codeGroup: string;
      /**
       * @description 코드 설명
       * @example 게시판
       */
      codeDescription: string;
      /**
       * Format: int32
       * @description 코드 순서
       * @example 1
       */
      codeIndex: number;
    };
    /** @description 코드 목록 */
    CdReadListResDto: {
      /** Format: int32 */
      totalPage?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      currentPage?: number;
      /** Format: int32 */
      limit?: number;
      /** @description 코드 목록 */
      data: components["schemas"]["CdReadResDto"][];
    };
    /** @description 코드 정보 */
    CdReadResDto: {
      /**
       * @description API 아이디
       * @example BBS
       */
      code: string;
      /**
       * @description 코드 명
       * @example 게시판
       */
      codeName: string;
      /**
       * @description 코드 값
       * @example BBS
       */
      codeValue: string;
      /**
       * @description 그룹 코드
       * @example APNDFILE_KD
       */
      codeGroup: string;
      /**
       * @description 코드 설명
       * @example 게시판
       */
      codeDescription: string;
      /**
       * Format: int32
       * @description 코드 순서
       * @example 1
       */
      codeIndex: number;
      /**
       * @description 사용 여부
       * @example Y
       */
      useYn: string;
      /**
       * @description 변경 가능 여부
       * @example Y
       */
      chgPsblYn: string;
      /**
       * @description 생성 일시
       * @example 2019-12-09 14:06:09
       */
      createDate: string;
      /**
       * @description 생성자 아이디
       * @example admin
       */
      createUserId: string;
      /**
       * @description 생성자 명
       * @example admin
       */
      createUserName: string;
      /**
       * @description 수정 일시
       * @example 2019-12-09 14:06:09
       */
      updateDate: string;
      /** @description 수정자 아이디 */
      updateUserId: string;
      /** @description 수정자 명 */
      updateUserName: string;
    };
    /** @description 코드 그룹 목록 */
    CdGrpReadListResDto: {
      /** Format: int32 */
      totalPage?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      currentPage?: number;
      /** Format: int32 */
      limit?: number;
      /** @description 코드 그룹 목록 */
      data: components["schemas"]["CdGrpReadResDto"][];
    };
    /** @description 코드 그룹 응답 */
    CdGrpReadResDto: {
      /**
       * @description 그룹 코드
       * @example APNDFILE_KD
       */
      codeGroup: string;
      /**
       * @description 코드 그룹 명
       * @example 첨부 파일 유형
       */
      codeGroupName: string;
      /**
       * @description 코드 그룹 설명
       * @example 첨부 파일 유형
       */
      codeGroupDescription: string;
      /**
       * @description 사용 여부
       * @example Y
       */
      useYn: string;
      /**
       * @description 생성 일시
       * @example 2020-12-09 14:04:57
       */
      createDate: string;
      /**
       * @description 생성자 아이디
       * @example admin
       */
      createUserId: string;
      /**
       * @description 생성자 명
       * @example admin
       */
      createUserName: string;
      /** @description 상위 그룹 코드 */
      parentCodeGroup: string;
      /**
       * @description 수정 일시
       * @example 2020-12-09 14:04:57
       */
      updateDate: string;
      /**
       * @description 수정자 아이디
       * @example admin
       */
      updateUserId: string;
      /**
       * @description 수정자 아이디
       * @example admin
       */
      updateUserName: string;
    };
    /** @description FAQ 목록 */
    FaqReadListResDto: {
      /** Format: int32 */
      totalPage?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      currentPage?: number;
      /** Format: int32 */
      limit?: number;
      /** @description FAQ 목록 */
      data: components["schemas"]["FaqResDto"][];
    };
    /** @description FAQ 정보 */
    FaqResDto: {
      /** Format: int32 */
      rowNum?: number;
      /**
       * @description 생성자 아이디
       * @example admin
       */
      crteUsrId: string;
      /**
       * @description 생성 일시
       * @example 2022-01-12 08:26:18.000
       */
      crteDt: string;
      /**
       * @description 수정자 아이디
       * @example admin
       */
      updUsrId: string;
      /**
       * @description 수정 일시
       * @example 2022-01-12 08:26:18.000
       */
      updDt: string;
      /**
       * Format: int32
       * @description FAQ 아이디
       * @example 1
       */
      faqId: number;
      /**
       * @description FAQ 제목
       * @example admin
       */
      faqTit: string;
      /**
       * @description FAQ 내용
       * @example 질문 내용입니다.
       */
      faqCont: string;
      /**
       * @description 카테고리 코드
       * @example Q
       */
      catgCd: string;
    };
    /** @description FAQ 정보 */
    FaqDetailResDto: {
      /** Format: int32 */
      rowNum?: number;
      /**
       * @description 생성자 아이디
       * @example admin
       */
      crteUsrId: string;
      /**
       * @description 생성 수정
       * @example 2022-01-12 08:26:18.000
       */
      crteDt: string;
      /**
       * @description 수정자 아이디
       * @example admin
       */
      updUsrId: string;
      /**
       * @description 수정 수정
       * @example 2022-01-12 08:26:18.000
       */
      updDt: string;
      /**
       * Format: int32
       * @description FAQ 아이디
       * @example 1
       */
      faqId: number;
      /**
       * @description FAQ 제목
       * @example admin
       */
      faqTit: string;
      /**
       * @description FAQ 내용
       * @example 질문 내용입니다.
       */
      faqCont: string;
      /**
       * @description 카테고리 코드
       * @example Q
       */
      catgCd: string;
      file?: components["schemas"]["ApndFiles"][];
      imageFile?: components["schemas"]["ApndFiles"][];
    };
    /** @description 공지사항 목록 */
    AnncReadListResDto: {
      /** Format: int32 */
      totalPage?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      currentPage?: number;
      /** Format: int32 */
      limit?: number;
      /** @description 공지사항 목록 */
      data: components["schemas"]["AnncResDto"][];
    };
    /** @description 공지사항 목록 */
    AnncResDto: {
      /** Format: int32 */
      rowNum?: number;
      /**
       * @description 생성자 아이디
       * @example admin
       */
      crteUsrId: string;
      /**
       * @description 생성 일시
       * @example 2022-01-12 08:26:18.000
       */
      crteDt: string;
      /**
       * @description 수정자 아이디
       * @example admin
       */
      updUsrId: string;
      /**
       * @description 수정 일시
       * @example 2022-01-12 08:26:18.000
       */
      updDt: string;
      /**
       * Format: int32
       * @description 공지사항 아이디
       * @example 1
       */
      anncId: number;
      /**
       * @description 공지사항 제목
       * @example admin
       */
      anncTit: string;
    };
    AnncDetailResDto: {
      /** Format: int32 */
      rowNum?: number;
      /**
       * @description 생성자 아이디
       * @example admin
       */
      crteUsrId: string;
      /**
       * @description 생성 일시
       * @example 2022-01-12 08:26:18.000
       */
      crteDt: string;
      /**
       * @description 수정자 아이디
       * @example admin
       */
      updUsrId: string;
      /**
       * @description 수정 일시
       * @example 2022-01-12 08:26:18.000
       */
      updDt: string;
      /**
       * Format: int32
       * @description 공지사항 아이디
       * @example 1
       */
      anncId: number;
      /**
       * @description 공지사항 제목
       * @example 제목입니다
       */
      anncTit: string;
      /**
       * @description 공지사항 내용
       * @example 내용입니다
       */
      anncCont: string;
      /**
       * @description 공지사항 시작일시
       * @example 2022-01-11
       */
      anncStrtdt: string;
      /**
       * @description 공지사항 종료일시
       * @example 2022-01-13
       */
      anncEnddt: string;
      file?: components["schemas"]["ApndFiles"][];
      imageFile?: components["schemas"]["ApndFiles"][];
    };
    /** @description 권한 목록 */
    AuthReadListResDto: {
      /** Format: int32 */
      totalPage?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      currentPage?: number;
      /** Format: int32 */
      limit?: number;
      /** @description 권한 목록 */
      data: components["schemas"]["AuthReadResDto"][];
    };
    /** @description 권한 정보 */
    AuthReadResDto: {
      /**
       * @description 권한 아이디
       * @example ALL_D
       */
      authId: string;
      /**
       * @description 권한 명
       * @example 모두 삭제(삭제불가)
       */
      authName: string;
      /**
       * @description 권한 설명
       * @example 모두 삭제(삭제불가)
       */
      authDescription: string;
      /**
       * @description 사용 여부
       * @example Y
       */
      useYn: string;
      /**
       * @description 생성 일시
       * @example 2020-11-25 01:49:09
       */
      createDate: string;
      /**
       * @description 생성자 아이디
       * @example admin
       */
      createUserId: string;
      /** @description 부모 권한 아이디 */
      parentAuthId: string;
      /**
       * @description 수정자 아이디
       * @example admin
       */
      updateUserId: string;
      /**
       * @description 수정 일시
       * @example 2020-11-25 01:49:09
       */
      updateDate: string;
    };
    /** @description API 목록 */
    ApiReadListResDto: {
      /** Format: int32 */
      totalPage?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      currentPage?: number;
      /** Format: int32 */
      limit?: number;
      /** @description API 목록 */
      data: components["schemas"]["ApiReadResDto"][];
    };
    /** @description API 정보 */
    ApiReadResDto: {
      /**
       * @description API 아이디
       * @example MGMT_API_CREATE
       */
      apiId: string;
      /**
       * @description API 명
       * @example API 등록 요청
       */
      apiName: string;
      /**
       * @description API 설명
       * @example API 등록 요청
       */
      apiDescription: string;
      /**
       * @description API 유형코드
       * @example MGMT
       */
      apiKindCode: string;
      /**
       * @description API 경로 패턴
       * @example /apis
       */
      apiPathPattern: string;
      /**
       * @description API 사용 여부
       * @example Y
       */
      useYn: string;
      /**
       * @description API 생성 일시
       * @example 2021-11-25 01:28:49
       */
      createDate: string;
      /**
       * @description API 생성자 아이디
       * @example ADMIN
       */
      createUserId: string;
      /**
       * @description API 수정 일시
       * @example 2021-11-25 01:28:49
       */
      updateDate: string;
      /**
       * @description API 수정자 아이디
       * @example ADMIN
       */
      updateUserId: string;
      /**
       * @description API 메소드 타입
       * @example GET
       */
      apiActDivsCd: string;
      /**
       * @description API와 매핑된 역활ID 목록
       * @example ROLE_ADMIN
       */
      roleIds: string[];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /**
   * 사용자 상세 조회
   * @description 사용자 상세 조회
   */
  getUser: {
    parameters: {
      path: {
        /** @description 사용자 아이디(필수) */
        usrId: string;
      };
    };
    responses: {
      /** @description Success body Dto schema */
      200: {
        content: {
          "application/json": components["schemas"]["UsrReadResDto"];
        };
      };
      /** @description Default response */
      default: {
        content: {
          "application/json": components["schemas"]["ComResponseDto"];
        };
      };
    };
  };
  /**
   * 사용자 수정
   * @description 사용자 수정(Schemas > UsrUpdateReqDto 참고)
   */
  updateUsr: {
    parameters: {
      path: {
        /** @description 사용자 아이디 */
        usrId: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UsrUpdateReqDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 사용자 삭제
   * @description 사용자 삭제
   */
  removeCd: {
    parameters: {
      path: {
        usrId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 역할 상세 조회
   * @description 역할 상세 조회
   */
  getRole: {
    parameters: {
      path: {
        /** @description 역할 아이디(필수) */
        roleId: string;
      };
    };
    responses: {
      /** @description Success body Dto schema */
      200: {
        content: {
          "application/json": components["schemas"]["RoleReadResDto"];
        };
      };
      /** @description Default response */
      default: {
        content: {
          "application/json": components["schemas"]["ComResponseDto"];
        };
      };
    };
  };
  /**
   * 역할 수정
   * @description 역할 수정(Schemas > RoleUpdateReqDto 참고)
   */
  updateRole: {
    parameters: {
      path: {
        roleId: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["RoleUpdateReqDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 역할아이디 기준 역할-사용자 매핑 정보를 갱신한다.(전체 삭제 후 등록)
   * @description 역할아이디 기준 역할-사용자 매핑 정보를 갱신한다.(전체 삭제 후 등록)
   */
  insertRoleUsrMapg: {
    parameters: {
      path: {
        /** @description 역할 아이디 */
        roleId: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["RoleUsrMapgUpdateReqDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 역할아이디 기준 모든 역할-메뉴-화면 매핑 정보를 갱신한다.(전체 삭제 후 등록)
   * @description 역할아이디 기준 모든 역할-메뉴-화면 매핑 정보를 갱신한다.(전체 삭제 후 등록)<br/>(Schemas > RoleMenuScrnMapgCreateReqDto 참고)
   */
  updateRoleMenuScrnMapg: {
    parameters: {
      path: {
        /** @description 역할 아이디 */
        roleId: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["RoleMenuScrnMapgUpdateReqDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 역할-API-권한 매핑 목록 조회
   * @description 역할-API-권한 매핑 목록 조회
   */
  getRoleApiAuthList: {
    parameters: {
      query?: {
        /** @description API명 */
        apiNm?: string;
        /** @description 현재 페이지(옵션, 빈값일 경우 1 기본세팅) */
        currentPage?: number;
        /** @description 페이지 사이즈(옵션, 빈값일 경우 20 기본세팅) */
        limit?: number;
      };
      path: {
        /** @description 역할 아이디 */
        roleId: string;
      };
    };
    responses: {
      /** @description Success body Dto schema */
      200: {
        content: {
          "application/json": components["schemas"]["RoleApiAuthReadListResDto"];
        };
      };
      /** @description Default response */
      default: {
        content: {
          "application/json": components["schemas"]["ComResponseDto"];
        };
      };
    };
  };
  /**
   * 역할아이디 기준 모든 역할-api-권한 매핑 정보를 갱신한다.(전체 삭제 후 등록)
   * @description 역할아이디 기준 모든 역할-api-권한 매핑 정보를 갱신한다.(전체 삭제 후 등록)<br/>(Schemas > RoleApiAuthMapgCreateReqDto 참고)
   */
  updateRoleApiAuthMapg: {
    parameters: {
      path: {
        /** @description 역할 아이디 */
        roleId: string;
      };
    };
    requestBody: {
      content: {
        "application/json": string[];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 역할-api-권한 매핑 삭제
   * @description 역할-api-권한 매핑 삭제
   */
  removeRoleApiAuth: {
    parameters: {
      path: {
        /** @description 역할 아이디 */
        roleId: string;
      };
    };
    requestBody: {
      content: {
        "application/json": string[];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * API 기준 모든 역할-api-권한 매핑 정보를 갱신한다.(전체 삭제 후 등록)
   * @description API 기준 모든 역할-api-권한 매핑 정보를 갱신한다.(전체 삭제 후 등록)<br/>(Schemas > RoleApiAuthMapgCreateReqDto 참고)
   */
  updateRoleApiAuthMapgByApi: {
    parameters: {
      path: {
        /** @description 역할 아이디 */
        roleId: string;
        /** @description API 아이디 */
        apiId: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["RoleApiAuthMapgUpdateReqDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 알림 상세 조회
   * @description 알림 상세 조회
   */
  getNotfDetail: {
    parameters: {
      path: {
        /** @description 알림 코드 */
        notiId: string;
      };
    };
    responses: {
      /** @description Success body Dto schema */
      200: {
        content: {
          "application/json": components["schemas"]["NotfReadResDto"];
        };
      };
      /** @description Default response */
      default: {
        content: {
          "application/json": components["schemas"]["ComResponseDto"];
        };
      };
    };
  };
  /**
   * 알림 수정
   * @description 알림 수정
   */
  updateNotf: {
    parameters: {
      path: {
        /** @description 알림 코드 */
        notiId: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["NotfUpdateReqDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 메뉴 상세 조회
   * @description 메뉴 상세 조회
   */
  getMenu: {
    parameters: {
      path: {
        /** @description 메뉴 아이디(필수) */
        menuId: string;
      };
    };
    responses: {
      /** @description Success body Dto schema */
      200: {
        content: {
          "application/json": components["schemas"]["MenuReadResDto"];
        };
      };
      /** @description Default response */
      default: {
        content: {
          "application/json": components["schemas"]["ComResponseDto"];
        };
      };
    };
  };
  /**
   * 메뉴 수정
   * @description 메뉴 수정(Schemas > MenuUpdateReqDto 참고)
   */
  updateMenu: {
    parameters: {
      path: {
        menuId: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["MenuUpdateReqDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 고객사 상세 조회
   * @description 고객사 상세 조회
   */
  findCustomer: {
    parameters: {
      path: {
        /** @description 고객사 ID(필수) */
        cucoId: string;
      };
    };
    responses: {
      /** @description Success body Dto schema */
      200: {
        content: {
          "application/json": components["schemas"]["CucoReadResDto"];
        };
      };
      /** @description Default response */
      default: {
        content: {
          "application/json": components["schemas"]["ComResponseDto"];
        };
      };
    };
  };
  /**
   * 고객사 수정
   * @description 고객사 수정
   */
  modifyCustomer: {
    parameters: {
      path: {
        /** @description 고객사 ID(필수) */
        cucoId: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CucoUpdateReqDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 고객사 부서 상세 조회
   * @description 고객사 부서 상세 조회
   */
  selectCucoDept: {
    parameters: {
      path: {
        /** @description 고객사 ID(필수) */
        cucoId: string;
        /** @description 부서 ID(필수) */
        deptId: number;
      };
    };
    responses: {
      /** @description Success body Dto schema */
      200: {
        content: {
          "application/json": components["schemas"]["CucoDeptReadResDto"];
        };
      };
      /** @description Default response */
      default: {
        content: {
          "application/json": components["schemas"]["ComResponseDto"];
        };
      };
    };
  };
  /**
   * 고객사 부서 수정
   * @description 고객사 부서 수정
   */
  modifyCucoDept: {
    parameters: {
      path: {
        /** @description 고객사 ID(필수) */
        cucoId: string;
        /** @description 부서 ID(필수) */
        deptId: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CucoDeptUpdateReqDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 비밀번호 변경
   * @description 비밀번호 변경
   */
  passwordChange: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["PasswordChngUsrInfoReqDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 코드 상세 조회
   * @description 코드 상세 조회
   */
  getCd: {
    parameters: {
      path: {
        /** @description 코드그룹 아이디(필수) */
        codeGroup: string;
        /** @description 코드 아이디(필수) */
        code: string;
      };
    };
    responses: {
      /** @description Success body Dto schema */
      200: {
        content: {
          "application/json": components["schemas"]["CdReadResDto"];
        };
      };
      /** @description Default response */
      default: {
        content: {
          "application/json": components["schemas"]["ComResponseDto"];
        };
      };
    };
  };
  /**
   * 코드 수정
   * @description 코드 수정(Schemas > CdUpdateReqDto 참고)
   */
  updateCd: {
    parameters: {
      path: {
        code: string;
        codeGroup: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CdUpdateReqDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 코드그룹 상세 조회
   * @description 코드그룹 상세 조회
   */
  getCdGrp: {
    parameters: {
      path: {
        /** @description 코드 그룹 아이디(필수) */
        codeGroup: string;
      };
    };
    responses: {
      /** @description Success body Dto schema */
      200: {
        content: {
          "application/json": components["schemas"]["CdGrpReadResDto"];
        };
      };
      /** @description Default response */
      default: {
        content: {
          "application/json": components["schemas"]["ComResponseDto"];
        };
      };
    };
  };
  /**
   * 코드그룹 수정
   * @description 코드그룹 수정(Schemas > CdGrpUpdateReqDto 참고)
   */
  updateCdGrp: {
    parameters: {
      path: {
        codeGroup: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CdGrpUpdateReqDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * FAQ 상세 조회
   * @description FAQ 상세 조회
   */
  selecFaq: {
    parameters: {
      path: {
        /** @description FAQ 아이디 */
        faqId: number;
      };
    };
    responses: {
      /** @description Success body Dto schema */
      200: {
        content: {
          "application/json": components["schemas"]["FaqDetailResDto"];
        };
      };
      /** @description Default response */
      default: {
        content: {
          "application/json": components["schemas"]["ComResponseDto"];
        };
      };
    };
  };
  /**
   * FAQ 수정
   * @description FAQ 수정
   */
  updateFaq: {
    parameters: {
      path: {
        /** @description FAQ 아이디 */
        faqId: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["FaqUpdateReqDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 공지사항 상세 조회
   * @description 공지사항 상세 조회
   */
  selectAnnc: {
    parameters: {
      path: {
        /** @description 공지사항 아이디 */
        anncId: number;
      };
    };
    responses: {
      /** @description Success body Dto schema */
      200: {
        content: {
          "application/json": components["schemas"]["AnncDetailResDto"];
        };
      };
      /** @description Default response */
      default: {
        content: {
          "application/json": components["schemas"]["ComResponseDto"];
        };
      };
    };
  };
  /**
   * 공지사항 수정
   * @description 공지사항 수정
   */
  updateAnnc: {
    parameters: {
      path: {
        /** @description 공지사항 아이디 */
        anncId: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AnncUpdateReqDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 권한 상세 조회
   * @description 권한 상세 조회
   */
  getAuth: {
    parameters: {
      path: {
        /** @description 권한 아이디(필수) */
        authId: string;
      };
    };
    responses: {
      /** @description Success body Dto schema */
      200: {
        content: {
          "application/json": components["schemas"]["AuthReadResDto"];
        };
      };
      /** @description Default response */
      default: {
        content: {
          "application/json": components["schemas"]["ComResponseDto"];
        };
      };
    };
  };
  /**
   * 권한 수정
   * @description 권한 수정(Schemas > AuthUpdateReqDto 참고)
   */
  updateAuth: {
    parameters: {
      path: {
        authId: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AuthUpdateReqDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 파일 정보 수정
   * @description 파일 정보 수정
   */
  updateApndFile: {
    parameters: {
      query?: {
        /** @description 첨부 파일 업무 유형 코드 */
        apndFileBizKindCode?: string;
        /** @description 디스플레이 파일 명 */
        displayFileName?: string;
        /** @description 사용 여부 */
        useYn?: string;
        /** @description 참조 업무 순번 */
        refBizSeq?: number;
      };
      path: {
        apndFileId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 파일 삭제
   * @description 파일 삭제
   */
  deleteApndFile: {
    parameters: {
      path: {
        /** @description 첨부 파일 번호 */
        apndFileId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * API 상세 조회
   * @description API 상세 조회
   */
  getApi: {
    parameters: {
      path: {
        /** @description API 아이디(필수) */
        apiId: string;
      };
    };
    responses: {
      /** @description Success body Dto schema */
      200: {
        content: {
          "application/json": components["schemas"]["ApiReadResDto"];
        };
      };
      /** @description Default response */
      default: {
        content: {
          "application/json": components["schemas"]["ComResponseDto"];
        };
      };
    };
  };
  /**
   * API 수정
   * @description API 수정(Schemas > ApiUpdateReqDto 참고)
   */
  updateApi: {
    parameters: {
      path: {
        apiId: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ApiUpdateReqDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * API 기준 역할리스트 갱신(전체 삭제 후 등록)
   * @description API 기준 역할리스트 갱신(전체 삭제 후 등록)
   */
  updateRoleListByApiId: {
    parameters: {
      path: {
        apiId: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ApiRoleUpdateReqDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 사용자 조회
   * @description 사용자 조회
   */
  getUserList: {
    parameters: {
      query?: {
        /** @description 유저 상태 */
        stateCd?: string;
        /** @description 사용자 아이디(옵션) */
        usrId?: string;
        /** @description 사용자 명(옵션) */
        usrNm?: string;
        /** @description 부서 아이디(옵션) */
        deptId?: number;
        /** @description 부서(옵션) */
        deptNm?: string;
        /** @description 역할(옵션) */
        roleNm?: string;
        /** @description 고객사 아이디(옵션) */
        cucoId?: string;
        /** @description 회사명(옵션) */
        cucoNm?: string;
        /** @description 현재 페이지(옵션, 빈값일 경우 1 기본세팅) */
        currentPage?: number;
        /** @description 페이지 사이즈(옵션, 빈값일 경우 20 기본세팅) */
        limit?: number;
      };
    };
    responses: {
      /** @description Success body Dto schema */
      200: {
        content: {
          "application/json": components["schemas"]["UsrReadListResDto"];
        };
      };
      /** @description Default response */
      default: {
        content: {
          "application/json": components["schemas"]["ComResponseDto"];
        };
      };
    };
  };
  /**
   * 사용자 등록
   * @description 사용자 등록(Schemas > UsrCreateReqDto 참고)
   */
  regUsr: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UsrCreateReqDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 역할 목록 조회
   * @description 역할 목록 조회
   */
  getRoleList: {
    parameters: {
      query?: {
        /** @description 검색 조건 <br><br> ROLE_ID : 역할 ID <br><br> ROLE_NM : 역할 명 */
        searchType?: string;
        /** @description 검색어 */
        searchText?: string;
        /** @description 사용 여부 <br><br> Y  or  N */
        useYn?: string;
        /** @description 현재 페이지(옵션, 빈값일 경우 1 기본세팅) */
        currentPage?: number;
        /** @description 페이지 사이즈(옵션, 빈값일 경우 10 기본세팅) */
        limit?: number;
      };
    };
    responses: {
      /** @description Success body Dto schema */
      200: {
        content: {
          "application/json": components["schemas"]["RoleReadListResDto"];
        };
      };
      /** @description Default response */
      default: {
        content: {
          "application/json": components["schemas"]["ComResponseDto"];
        };
      };
    };
  };
  /**
   * 역할 등록
   * @description 역할 등록(Schemas > RoleCreateReqDto 참고)
   */
  regRole: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["RoleCreateReqDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 역할 삭제
   * @description 역할 삭제
   */
  removeRole: {
    requestBody: {
      content: {
        "application/json": string[];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 알림 조회
   * @description 알림 조회
   */
  getNotf: {
    parameters: {
      query?: {
        /** @description 알림 코드 */
        notiId?: string;
        /** @description 알림 타입 */
        alarmType?: string;
        /** @description 알림 내용 */
        notiDescription?: string;
        /** @description 사용여부(옵션) */
        useYn?: string;
        /** @description 변경 가능 여부(옵션) */
        chgPsblYn?: string;
        /** @description 현재 페이지(옵션, 빈값일 경우 1 기본세팅) */
        currentPage?: number;
        /** @description 페이지 사이즈(옵션, 빈값일 경우 20 기본세팅) */
        limit?: number;
      };
    };
    responses: {
      /** @description Success body Dto schema */
      200: {
        content: {
          "application/json": components["schemas"]["NotfReadListResDto"];
        };
      };
      /** @description Default response */
      default: {
        content: {
          "application/json": components["schemas"]["ComResponseDto"];
        };
      };
    };
  };
  /**
   * 알림 등록
   * @description 알림 등록
   */
  createNotf: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["NotfCreateReqDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 알림 삭제
   * @description 알림 삭제
   */
  deleteNotf: {
    requestBody: {
      content: {
        "application/json": string[];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 메뉴 목록(트리) 조회(역할 할당여부 표시, 할당된 화면만 리스트업)
   * @description 메뉴 목록(트리) 조회(역할 할당여부 표시, 할당된 화면만 리스트업)
   */
  getMenuList: {
    parameters: {
      query?: {
        /** @description 메뉴 명(옵션) */
        menuName?: string;
        /** @description 역할 아이디(역할에 할당된 메뉴는 assigned=true 조회됨)(옵션)<br/>메뉴에 매핑된 화면 정보는 '역할아이디'를 입력해줘야 확인됩니다. */
        roleId?: string;
        /** @description 메뉴 유형 코드(옵션)(ADMIN,USER) */
        menuKindCode?: string;
      };
    };
    responses: {
      /** @description Success body Dto schema */
      200: {
        content: {
          "application/json": components["schemas"]["MenuReadListResDto"];
        };
      };
      /** @description Default response */
      default: {
        content: {
          "application/json": components["schemas"]["ComResponseDto"];
        };
      };
    };
  };
  /**
   * 메뉴 등록
   * @description 메뉴 등록
   */
  regMenu: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["MenuCreateReqDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 메뉴 삭제
   * @description 메뉴 삭제
   */
  removeMenu: {
    requestBody: {
      content: {
        "application/json": string[];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 로그인
   * @description 로그인</br></br> ** 테스트 계정 : admin / U2FsdGVkX1/W9xtgxK5iaWm6Wsbmi5y1PoUf2WP5SSk=
   */
  login: {
    parameters: {
      query: {
        /** @description 사용자 아이디 */
        info1: string;
        /** @description 사용자 비밀번호 */
        info2: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * SMS 인증번호 발송
   * @description SMS 인증번호 발송
   */
  sendSmsAuth: {
    parameters: {
      query: {
        /** @description 사용자 아이디 */
        usrId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": string;
        };
      };
    };
  };
  /**
   * 중복 로그인 제거
   * @description 중복 로그인 제거
   */
  confirmLogin: {
    parameters: {
      path: {
        usrId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * SMS 인증번호 체크
   * @description SMS 인증번호 체크
   */
  checkSmsAuth: {
    parameters: {
      query: {
        /** @description 사용자 아이디 */
        usrId: string;
        /** @description 인증번호 */
        authNum: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 중복 로그인 체크
   * @description 중복 로그인 체크
   */
  checkDuplicateLogin: {
    parameters: {
      path: {
        usrId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 고객사 리스트 조회
   * @description 고객사 리스트 조회
   */
  findCustomerList: {
    parameters: {
      query?: {
        /** @description 고객사 ID(옵션) */
        cucoId?: string;
        cucoNm?: string;
        /** @description 마스터 아이디(옵션) */
        mstrId?: string;
        /** @description 상태(ACTIVE / LOCK / CANCEL)(옵션) */
        stateCd?: string;
        /** @description 현재 페이지(옵션, 빈값일 경우 1 기본세팅) */
        currentPage?: number;
        /** @description 페이지 사이즈(옵션, 빈값일 경우 20 기본세팅) */
        limit?: number;
        /** @description 고객사 명(옵션) */
        customerName?: string;
      };
    };
    responses: {
      /** @description Success body Dto schema */
      200: {
        content: {
          "application/json": components["schemas"]["CucoReadListResDto"];
        };
      };
      /** @description Default response */
      default: {
        content: {
          "application/json": components["schemas"]["ComResponseDto"];
        };
      };
    };
  };
  /**
   * 고객사 등록
   * @description 고객사 등록
   */
  inputCustomer: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CucoCreateReqDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 고객사 삭제
   * @description 고객사 삭제
   */
  removeCustomer: {
    requestBody: {
      content: {
        "application/json": string[];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 고객사 부서 조회
   * @description 고객사 부서 조회
   */
  selectCucoDeptList: {
    parameters: {
      query?: {
        /** @description 사용여부 */
        useYn?: string;
        /** @description 부서 1depth */
        depthLvl1?: string;
        /** @description 부서 2depth */
        depthLvl2?: string;
        /** @description 부서 3depth */
        depthLvl3?: string;
        /** @description 현재 페이지(옵션, 빈값일 경우 1 기본세팅) */
        currentPage?: number;
        /** @description 페이지 사이즈(옵션, 빈값일 경우 20 기본세팅) */
        limit?: number;
      };
      path: {
        /** @description 고객사 ID(필수) */
        cucoId: string;
      };
    };
    responses: {
      /** @description Success body Dto schema */
      200: {
        content: {
          "application/json": components["schemas"]["CucoDeptReadListResDto"];
        };
      };
      /** @description Default response */
      default: {
        content: {
          "application/json": components["schemas"]["ComResponseDto"];
        };
      };
    };
  };
  /**
   * 고객사 부서 등록
   * @description 고객사 부서 등록
   */
  inputCucoDept: {
    parameters: {
      path: {
        cucoId: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CucoDeptCreateReqDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 고객사 부서 삭제
   * @description 고객사 부서 삭제
   */
  removeCucoDept: {
    parameters: {
      path: {
        /** @description 고객사 ID(필수) */
        cucoId: string;
      };
    };
    requestBody: {
      content: {
        "application/json": number[];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  regImgs: {
    requestBody?: {
      content: {
        "multipart/form-data": {
          files: string[];
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["FileReadListResDto"];
        };
      };
    };
  };
  /**
   * 코드 목록 조회
   * @description 코드 목록 조회
   */
  getCdList_1: {
    parameters: {
      query: {
        /** @description 코드 아이디(옵션) */
        code?: string;
        /** @description 코드 명(옵션) */
        codeName?: string;
        /** @description 코드그룹 아이디(옵션) */
        codeGroup: string;
        /** @description 사용여부(옵션) */
        useYn?: string;
        /** @description 변경 가능 여부(옵션) */
        chgPsblYn?: string;
        /** @description 현재 페이지(옵션, 빈값일 경우 1 기본세팅) */
        currentPage?: number;
        /** @description 페이지 사이즈(옵션, 빈값일 경우 20 기본세팅) */
        limit?: number;
      };
    };
    responses: {
      /** @description Success body Dto schema */
      200: {
        content: {
          "application/json": components["schemas"]["CdReadListResDto"];
        };
      };
      /** @description Default response */
      default: {
        content: {
          "application/json": components["schemas"]["ComResponseDto"];
        };
      };
    };
  };
  /**
   * 코드 등록
   * @description 코드 등록(Schemas > ComResponseDto 참고)
   */
  regCd: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CdCreateReqDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 코드그룹 목록 조회
   * @description 코드그룹 목록 조회
   */
  getCdGrpList: {
    parameters: {
      query?: {
        /** @description 코드 그룹 아이디(옵션) */
        codeGroup?: string;
        /** @description 코드 그룹 명(옵션) */
        codeGroupName?: string;
        /** @description 사용여부(옵션) */
        useYn?: string;
        /** @description 현재 페이지(옵션, 빈값일 경우 1 기본세팅) */
        currentPage?: number;
        /** @description 페이지 사이즈(옵션, 빈값일 경우 20 기본세팅) */
        limit?: number;
      };
    };
    responses: {
      /** @description Success body Dto schema */
      200: {
        content: {
          "application/json": components["schemas"]["CdGrpReadListResDto"];
        };
      };
      /** @description Default response */
      default: {
        content: {
          "application/json": components["schemas"]["ComResponseDto"];
        };
      };
    };
  };
  /**
   * 코드그룹 등록
   * @description 코드그룹 등록(Schemas > CdGrpCreateReqDto 참고)
   */
  regCdGrp: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CdGrpCreateReqDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 코드그룹 삭제
   * @description 코드그룹 삭제
   */
  removeCdGrp: {
    requestBody: {
      content: {
        "application/json": string[];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * FAQ 리스트 조회
   * @description FAQ 리스트 조회
   */
  selectFaqList: {
    parameters: {
      query?: {
        /** @description 현재 페이지 */
        currentPage?: number;
        /** @description 페이지 사이즈(옵션, 빈값일 경우 20 기본세팅) */
        limit?: number;
        /** @description FAQ 제목 */
        faqTit?: string;
        /** @description 등록자 */
        crteUsrId?: string;
        /** @description 카테고리 코드 */
        catgCd?: string;
      };
    };
    responses: {
      /** @description Success body Dto schema */
      200: {
        content: {
          "application/json": components["schemas"]["FaqReadListResDto"];
        };
      };
      /** @description Default response */
      default: {
        content: {
          "application/json": components["schemas"]["ComResponseDto"];
        };
      };
    };
  };
  /**
   * FAQ 등록
   * @description FAQ 등록
   */
  regFaq: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["FaqCreateReqDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * FAQ 삭제
   * @description FAQ 삭제
   */
  removeFaq: {
    requestBody: {
      content: {
        "application/json": number[];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 공지사항 리스트 조회
   * @description 공지사항 조회
   */
  selectAnncList: {
    parameters: {
      query?: {
        /** @description 현재 페이지 */
        currentPage?: number;
        /** @description 페이지 사이즈(옵션, 빈값일 경우 20 기본세팅) */
        limit?: number;
        /** @description 공지사항 제목 */
        anncTit?: string;
        /** @description 등록자 */
        crteUsrId?: string;
      };
    };
    responses: {
      /** @description Success body Dto schema */
      200: {
        content: {
          "application/json": components["schemas"]["AnncReadListResDto"];
        };
      };
      /** @description Default response */
      default: {
        content: {
          "application/json": components["schemas"]["ComResponseDto"];
        };
      };
    };
  };
  /**
   * 공지사항 등록
   * @description 공지사항 등록
   */
  regAnnc: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AnncCreateReqDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 공지사항 삭제
   * @description 공지사항 삭제
   */
  removeAnnc: {
    requestBody: {
      content: {
        "application/json": number[];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 권한 목록 조회
   * @description 권한 목록 조회
   */
  getAuthList: {
    parameters: {
      query?: {
        /** @description 권한 ID(옵션) */
        authId?: string;
        /** @description 권한 명(옵션) */
        authName?: string;
        /** @description 사용 여부(옵션) */
        useYn?: string;
        /** @description 현재 페이지(옵션, 빈값일 경우 1 기본세팅) */
        currentPage?: number;
        /** @description 페이지 사이즈(옵션, 빈값일 경우 20 기본세팅) */
        limit?: number;
      };
    };
    responses: {
      /** @description Success body Dto schema */
      200: {
        content: {
          "application/json": components["schemas"]["AuthReadListResDto"];
        };
      };
      /** @description Default response */
      default: {
        content: {
          "application/json": components["schemas"]["ComResponseDto"];
        };
      };
    };
  };
  /**
   * 권한 등록
   * @description 권한 등록(Schemas > AuthCreateReqDto 참고)
   */
  regAuth: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AuthCreateReqDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 권한 삭제
   * @description 권한 삭제
   */
  removeAuth: {
    requestBody: {
      content: {
        "application/json": string[];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * API 목록 조회
   * @description API 목록 조회
   */
  getApiList: {
    parameters: {
      query?: {
        /** @description API 메소드 타입(옵션) <br><br> GET / POST / PUT / DELETE */
        apiActDivsCd?: string;
        /** @description 사용 여부(옵션) */
        useYn?: string;
        /** @description API ID(옵션) */
        apiId?: string;
        /** @description API 명(옵션) */
        apiName?: string;
        /** @description API 서비스(옵션) */
        apiKdCd?: string;
        /** @description 현재 페이지(옵션, 빈값일 경우 1 기본세팅) */
        currentPage?: number;
        /** @description 페이지 사이즈(옵션, 빈값일 경우 20 기본세팅) */
        limit?: number;
      };
    };
    responses: {
      /** @description Success body Dto schema */
      200: {
        content: {
          "application/json": components["schemas"]["ApiReadListResDto"];
        };
      };
      /** @description Default response */
      default: {
        content: {
          "application/json": components["schemas"]["ComResponseDto"];
        };
      };
    };
  };
  /**
   * API 등록
   * @description API 등록(Schemas > ApiCreateReqDto 참고)
   */
  regApi: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ApiCreateReqDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * API 삭제
   * @description API 삭제
   */
  removeApi: {
    requestBody: {
      content: {
        "application/json": string[];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  welcome: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": string;
        };
      };
    };
  };
  /**
   * 역할-메뉴-화면 매핑 목록 조회
   * @description 역할-메뉴-화면 매핑 목록 조회
   */
  getRoleMenuScrnMapgList: {
    parameters: {
      query?: {
        /** @description 역할 아이디(옵션)(equal 검색) */
        roleId?: string;
        /** @description 메뉴 명(옵션)(equal 검색) */
        menuId?: string;
        /** @description 화면 명(옵션)(equal 검색) */
        screenId?: string;
      };
    };
    responses: {
      /** @description Success body Dto schema */
      200: {
        content: {
          "application/json": components["schemas"]["RoleMenuScrnMapgReadListResDto"];
        };
      };
      /** @description Default response */
      default: {
        content: {
          "application/json": components["schemas"]["ComResponseDto"];
        };
      };
    };
  };
  /**
   * 역할-API 매핑 목록 조회
   * @description 역할-API 매핑 목록 조회
   */
  getRoleApiList: {
    parameters: {
      query?: {
        /** @description 역할 아이디 */
        roleId?: string;
        /** @description API 아이디 */
        apiId?: string;
        /** @description 현재 페이지(옵션, 빈값일 경우 1 기본세팅) */
        currentPage?: number;
        /** @description 페이지 사이즈(옵션, 빈값일 경우 20 기본세팅) */
        limit?: number;
      };
    };
    responses: {
      /** @description Success body Dto schema */
      200: {
        content: {
          "application/json": components["schemas"]["RoleApiReadListResDto"];
        };
      };
      /** @description Default response */
      default: {
        content: {
          "application/json": components["schemas"]["ComResponseDto"];
        };
      };
    };
  };
  /**
   * 알림 목록 엑셀 다운로드(jxls)
   * @description jxls Template을 이용한 Excel 다운로드
   */
  downloadNotfListExcel: {
    parameters: {
      query?: {
        /** @description 알림 코드 */
        notiId?: string;
        /** @description 알림 타입 */
        alarmType?: string;
        /** @description 알림 내용 */
        notiDescription?: string;
        /** @description 사용여부(옵션) */
        useYn?: string;
        /** @description 변경 가능 여부(옵션) */
        chgPsblYn?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 로그아웃
   * @description 로그아웃
   */
  logout: {
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 고객사 사용자 리스트 조회(고객사 사용자 등록팝업 겸용)
   * @description 고객사 사용자 리스트 조회(고객사 사용자 등록팝업 겸용)
   */
  findCustomerUserList: {
    parameters: {
      query?: {
        /** @description 고객사 ID(옵션) */
        userId?: string;
        /** @description 고객사 명(옵션) */
        userName?: string;
        /** @description 추가한 사용자 조회 여부(필수, 기본값 Y), <br/> 'N'일 경우, 어떠한 고객사든 등록된 사용자는 제외하고 조회된다. */
        addYn?: string;
        searchText?: string;
        /** @description 현재 페이지(옵션, 빈값일 경우 1 기본세팅) */
        currentPage?: number;
        /** @description 페이지 사이즈(옵션, 빈값일 경우 20 기본세팅) */
        limit?: number;
      };
      path: {
        cucoId: string;
      };
    };
    responses: {
      /** @description Success body Dto schema */
      200: {
        content: {
          "application/json": components["schemas"]["CucoUserReadListResDto"];
        };
      };
      /** @description Default response */
      default: {
        content: {
          "application/json": components["schemas"]["ComResponseDto"];
        };
      };
    };
  };
  /**
   * 고객사 사이트 조회
   * @description 고객사 사이트 조회
   */
  findCucoSite: {
    parameters: {
      query?: {
        /** @description 고객사 사이트 (옵션) */
        cucoSiteNm?: string;
        /** @description 현재 페이지(옵션, 빈값일 경우 1 기본세팅) */
        currentPage?: number;
        /** @description 페이지 사이즈(옵션, 빈값일 경우 20 기본세팅) */
        limit?: number;
      };
      path: {
        /** @description 고객사 ID(필수) */
        cucoId: string;
      };
    };
    responses: {
      /** @description Success body Dto schema */
      200: {
        content: {
          "application/json": components["schemas"]["CucoSiteReadListResDto"];
        };
      };
      /** @description Default response */
      default: {
        content: {
          "application/json": components["schemas"]["ComResponseDto"];
        };
      };
    };
  };
  /**
   * 고객사 부서 조회(페이징 없이)
   * @description 고객사 부서 조회(페이징 없이)
   */
  selectNoPageCucoDeptList: {
    parameters: {
      path: {
        /** @description 고객사 ID(필수) */
        cucoId: string;
      };
    };
    responses: {
      /** @description Success body Dto schema */
      200: {
        content: {
          "application/json": components["schemas"]["CucoDeptReadResDto"];
        };
      };
      /** @description Default response */
      default: {
        content: {
          "application/json": components["schemas"]["ComResponseDto"];
        };
      };
    };
  };
  /**
   * 고객사 상위 부서 조회
   * @description 고객사 상위 부서 조회
   */
  selectCucoHposDeptList: {
    parameters: {
      path: {
        /** @description 고객사 ID(필수) */
        cucoId: string;
      };
    };
    responses: {
      /** @description Success body Dto schema */
      200: {
        content: {
          "application/json": components["schemas"]["CucoDeptReadResDto"];
        };
      };
      /** @description Default response */
      default: {
        content: {
          "application/json": components["schemas"]["ComResponseDto"];
        };
      };
    };
  };
  /**
   * 고객사 부서명 중복 체크
   * @description 고객사 부서명 중복 체크
   */
  checkCucoDeptNm: {
    parameters: {
      query: {
        /** @description 부서명(필수) */
        deptNm: string;
        /** @description 부서 아이디 */
        deptId?: number;
        /** @description 상위 부서 ID */
        hposDeptId?: number;
      };
      path: {
        /** @description 고객사 ID(필수) */
        cucoId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 세션 정보 조회
   * @description 세션 정보 조회
   */
  getSession: {
    responses: {
      /** @description Success body Dto schema */
      200: {
        content: {
          "application/json": components["schemas"]["LginUsrSimpleInfoDto"];
        };
      };
      /** @description Default response */
      default: {
        content: {
          "application/json": components["schemas"]["ComResponseDto"];
        };
      };
    };
  };
  /**
   * 메일 발송
   * @description 메일 발송
   */
  sendMail: {
    parameters: {
      query: {
        /** @description 발송 메일 */
        toSendMail: string;
        /** @description 사용자 아이디 */
        userId: string;
        /** @description 사용자 이름 */
        userName: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ComResponseDtoVoid"];
        };
      };
    };
  };
  /**
   * 서버 profie(로컬,개발,운영) 상태 조회
   * @description 서버 profie(로컬,개발,운영) 상태 조회
   */
  getProfile: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ComResponseDtoString"];
        };
      };
    };
  };
  /**
   * mqtt 접속 정보 조회
   * @description mqtt 접속 정보 조회
   */
  getMqttConnectionInfo: {
    responses: {
      /** @description Success body Dto schema */
      200: {
        content: {
          "application/json": components["schemas"]["MqttConnectionInfoDto"];
        };
      };
      /** @description Default response */
      default: {
        content: {
          "application/json": components["schemas"]["ComResponseDto"];
        };
      };
    };
  };
  /**
   * 암복호화 모듈 테스트(화면->서버구간)
   * @description 암복호화 모듈 테스트(화면->서버구간)
   */
  encodePassword: {
    parameters: {
      query: {
        /** @description 내용 */
        text: string;
        /** @description 암호키(옵션, 빈값이면 시스템에 정의된 키 사용) */
        passphrase?: string;
        /** @description 암복호화 구분. ENC(암호화)/DEC(복호화)<br/><font color='red'>* 암호화는 구현중입니다.</font> DEC */
        type: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": string;
        };
      };
    };
  };
  /**
   * 사용자 비밀번호 DB 저장시 암호화 용도
   * @description 사용자 비밀번호 DB 저장시 암호화 용도
   */
  encodePassword_1: {
    parameters: {
      query: {
        /** @description 암호화할 비밀번호(필수) */
        password: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": string;
        };
      };
    };
  };
  downImgs: {
    parameters: {
      query: {
        apndFileId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["FileDownResDto"];
        };
      };
    };
  };
  /**
   * 코드 조회
   * @description 코드 조회
   */
  getCdList: {
    parameters: {
      path: {
        /** @description 코드그룹(필수) */
        codeGroup: string;
      };
    };
    responses: {
      /** @description Success body Dto schema */
      200: {
        content: {
          "application/json": components["schemas"]["CdCmmnReadListResDto"];
        };
      };
      /** @description Default response */
      default: {
        content: {
          "application/json": components["schemas"]["ComResponseDto"];
        };
      };
    };
  };
  /**
   * 역할-메뉴-화면 매핑 단건 삭제
   * @description 역할-메뉴-화면 매핑 단건 삭제
   */
  removeRoleMenuScrn: {
    parameters: {
      path: {
        /** @description 역할 아이디 */
        roleId: string;
        menuId: string;
        scrnId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 고객사 사이트 삭제
   * @description 고객사 사이트 삭제(cucoSiteId 존재시 단건 삭제/cucoSiteId 미존재시 전체삭제
   */
  removeCucoSite: {
    parameters: {
      query: {
        /** @description 고객사 ID(필수) */
        cucoId: string;
        /** @description 고객사 사이트 ID(옵션) */
        cucoSiteId?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * 코드 삭제
   * @description 코드 삭제
   */
  removeCd_1: {
    parameters: {
      path: {
        /** @description 코드 그룹 아이디 */
        codeGroup: string;
      };
    };
    requestBody: {
      content: {
        "application/json": string[];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
}
